
Crear usuario administrador 
Abre tu terminal en la raÃ­z del proyecto y ejecuta:

python

luego pega todo este codigo 

from app.db.config import SessionLocal
from app.db.models import User
from werkzeug.security import generate_password_hash
import os
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization
from cryptography.fernet import Fernet
import datetime

# 1. ConfiguraciÃ³n de la base de datos
db = SessionLocal()

# 2. Generar claves pÃºblica y privada
key = rsa.generate_private_key(public_exponent=65537, key_size=2048)
private_key_bytes = key.private_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PrivateFormat.PKCS8,
    encryption_algorithm=serialization.NoEncryption()
)
public_key_bytes = key.public_key().public_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PublicFormat.SubjectPublicKeyInfo
)

# 3. Cifrar la clave privada con la SECRET_KEY de tu .env
secret = os.getenv("SIGNATURE_SECRET_KEY")
fernet = Fernet(secret.encode())
encrypted_private_key = fernet.encrypt(private_key_bytes)

# 4. Crear el usuario administrador
admin_user = User(
    email="m5954852@gmail.com",
    password_hash=generate_password_hash("Admin123!"),
    first_name="Admin",
    last_name="User",
    role="admin",
    is_active=True,
    can_upload=True,
    public_key=public_key_bytes,
    encrypted_private_key=encrypted_private_key,
    created_at=datetime.datetime.utcnow()
)

db.add(admin_user)
db.commit()
db.close()

print("âœ… Usuario administrador creado exitosamente.")

----

dale enter y luego pon exit() para salir 
-----------------------------------------------
http://localhost:5000/register

{
  "email": "solisedison@outlook.com",
  "password": "Admin1234567@",
  "first_name": "Juan",
  "last_name": "PÃ©rez"

}


-----------------------------------------------------------

Login 

http://localhost:5000/auth/two-factor/request-2fa


{
  "email": "solisedison@outlook.com",
  "password": "Admin1234567@"
}


{
  "email": "m5954852@gmail.com",
  "password": "Admin123!"
}
-----------------------------------------------------------

Dar click al enlace del correo y te redirijira a una pagina que tiene el token en la url 
ejemplo : 
http://tu-frontend.com/verify-success?session_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo0LCJlbWFpbCI6Im01OTU0ODUyQGdtYWlsLmNvbSIsInJvbGUiOiJhZG1pbiIsImV4cCI6MTc0Njg2MDE3NX0.mRDMA6Lib_JNFu-l-ZXFymv7HaO4PEWmePaFMqobkx8

ahi se encuentra el token tratar de obtenerlo desde la url y alamacenarlo 
-----------------------

Adminitrador 

Obtener todos los usuarios :

http://localhost:5000/auth/admin/users

en Header poner Authorization: Bearer token 

----------------------------------------------------------------

Actualizar usuarios :


http://localhost:5000/auth/admin/update-user

{
   "id": 2,
    "role": "user",
    "is_active": true,
    "can_upload": true
}

--------------------------------------------------------------------------

Subir Archivo

URL: http://localhost:5000/files/

Method: POST

Headers:

Authorization: Bearer <session_token>

Body (form-data):

file: (Selecciona un archivo)

---------------------------------------------------------------
Descargar Archivo
URL: http://localhost:5000/files/<file_id>

Method: GET

Headers:

Authorization: Bearer <session_token>

--------------------

Listar Archivos
URL: http://localhost:5000/files/?page=1&per_page=10

Method: GET

Headers:

Authorization: Bearer <session_token>

{
    "total": 2,
    "page": 1,
    "per_page": 10,
    "files": [
        {
            "file_id": 1,
            "file_name": "documento1.pdf",
            "user_id": 5,
            "created_at": "2025-05-11T10:00:00",
            "access_type": "own"
        },
        {
            "file_id": 2,
            "file_name": "informe_compartido.docx",
            "user_id": 8,
            "created_at": "2025-05-10T15:30:00",
            "access_type": "shared"
        }
    ]
}

--------------------------------------
Eliminar Archivo
URL: http://localhost:5000/files/<file_id>

Method: DELETE

Headers:

Authorization: Bearer <session_token>

-----------------------------------------------------------

 Compartir Archivo con Otro Usuario

 URL: http://localhost:5000/files/<file_id>/share

Method: POST

Headers:

Authorization: Bearer <session_token>

Body (JSON):

{
  "target_user_id": 5
}
-------------------------------------------------------------------

Actualizar Archivo
URL: http://localhost:5000/files/<file_id>

Method: PUT

Headers:

Authorization: Bearer <session_token>

Body (form-data):

file: (Nuevo archivo, opcional)

file_name: (Nuevo nombre, opcional)

------------------------------------------
Consultar Perfil del Usuario
URL: http://localhost:5000/users/profile

MÃ©todo: GET

Headers:

Authorization: Bearer <session_token>

ðŸ”¹ Â¿QuÃ© devuelve?

{
    "email": "user@example.com",
    "first_name": "John",
    "last_name": "Doe",
    "role": "user",
    "is_active": true,
    "can_upload": false
}

--------------------------------------

Actualizar Perfil del Usuario
URL: http://localhost:5000/users/profile

MÃ©todo: PUT

Headers:

Authorization: Bearer <session_token>

Content-Type: application/json

Body (JSON):
{
    "first_name": "Jane",
    "last_name": "Smith",
    "email": "new_email@example.com"
}

-----------------------------------------

api cerrar sesion :

POST http://localhost:5000/auth/two-factor/logout

Authorization: Bearer <TU_TOKEN_JWT>

-----------------------------------------------------

api quitar permisos de archivos : 

POST http://localhost:5000/files/<file_id>/revoke
Authorization	Bearer <tu_token>

Body (JSON):

{
    "target_user_id": 5
}

------------------------------------------------------------------
Obtener datos de descargas 

MÃ©todo: GET http://localhost:5000/files/10/download-history
Authorization: Bearer <TOKEN>

asi se obtiene la infromacion 

{
    "file_id": 10,
    "history": [
        {
            "user_id": 5,
            "email": "juan@example.com",
            "first_name": "Juan",
            "last_name": "PÃ©rez",
            "download_count": 3,
            "last_download": "2025-05-11T23:15:00"
        },
        {
            "user_id": 8,
            "email": "ana@example.com",
            "first_name": "Ana",
            "last_name": "GarcÃ­a",
            "download_count": 1,
            "last_download": "2025-05-10T18:22:00"
        }
    ]
}

