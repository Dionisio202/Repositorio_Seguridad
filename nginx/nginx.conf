events {}

http {
    # 🔒 Limita la tasa de peticiones por IP
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    server {
        listen 443 ssl;
        server_name localhost;

        # 📜 Rutas a certificados SSL
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;

        # 🔐 Cabeceras de seguridad
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=()" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # 🚫 Bloqueo de agentes sospechosos
        if ($http_user_agent ~* (curl|wget|python|scrapy|bot|spider|crawler|Go-http-client)) {
            return 403;
        }
        if ($http_user_agent = "") {
            return 403;
        }

        # 🚫 Validación del host para evitar spoofing
        if ($host !~ ^(localhost|127\.0\.0\.1)$) {
            return 444;
        }

        # 📦 Límite de carga y tiempo de espera
        client_max_body_size 10M;
        client_body_timeout 10s;

        location / {
            # ⏳ Aplicar limitación por IP
            limit_req zone=req_limit_per_ip burst=20 nodelay;

            # 🔁 Reenvío hacia tu backend Flask
            proxy_pass http://host.docker.internal:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
